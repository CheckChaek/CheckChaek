import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;
import software.amazon.awssdk.services.s3.S3Client;
import software.amazon.awssdk.services.s3.model.*;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

@Service
public class ImageService {

    private final S3Client s3Client;
    private final String bucketName = "your-s3-bucket-name"; // S3 버킷 이름

    @Autowired
    public ImageService(S3Client s3Client) {
        this.s3Client = s3Client;
    }

    public List<String> uploadImages(List<MultipartFile> images) {
        List<String> imageUrls = new ArrayList<>();

        for (MultipartFile image : images) {
            String key = generateKey(image.getOriginalFilename());

            try {
                PutObjectResponse response = s3Client.putObject(PutObjectRequest.builder()
                        .bucket(bucketName)
                        .key(key)
                        .build(), image.getInputStream());

                // 이미지의 S3 URL 생성
                String imageUrl = s3Client.utilities().getUrl(GetUrlRequest.builder()
                        .bucket(bucketName)
                        .key(key)
                        .build())
                        .toString();

                imageUrls.add(imageUrl);
            } catch (IOException e) {
                // 예외 처리
                e.printStackTrace();
            }
        }

        return imageUrls;
    }

    private String generateKey(String filename) {
        // S3에 저장될 이미지의 고유 키 생성 로직
        // 예를 들어, UUID 또는 고유한 이름을 사용할 수 있습니다.
        return filename;
    }
}
